{"version":3,"sources":["spotify.js","components/js/Login.js","components/js/DataLayer.js","components/js/Header.js","components/js/SongRow.js","components/js/Body.js","components/js/Footer.js","components/js/SidebarOption.js","components/js/Sidebar.js","components/js/Player.js","App.js","serviceWorker.js","reducer.js","index.js"],"names":["getTokenFromUrl","window","location","hash","substring","split","reduce","initial","item","parts","decodeURIComponent","console","log","loginUrl","join","Login","className","src","alt","href","DataLayerContext","createContext","DataLayer","initialState","reducer","children","Provider","value","useReducer","useDataLayerValue","useContext","Header","user","placeholder","type","Avatar","images","url","display_name","sx","width","height","SongRow","track","album","name","artists","map","artist","Body","spotify","discover_weekly","description","fontSize","tracks","items","Footer","playing","dispatch","useEffect","getMyCurrentPlaybackState","then","r","is_playing","handlePlayPause","pause","play","onClick","skipToNext","getMyCurrentPlayingTrack","skipToPrevious","Grid","container","spacing","xs","Slider","size","defaultValue","SidebarOption","title","Icon","Sidebar","playlists","HomeIcon","SearchIcon","LibraryMusicIcon","playlist","Player","SpotifyWebApi","App","token","_token","access_token","setAccessToken","getMe","getUserPlaylists","getPlaylist","response","getMyTopArtists","top_artists","Boolean","hostname","match","state","action","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.38a32613.chunk.js","sourcesContent":["// https://developer.spotify.com/documentation/web-playback-sdk/quick-start/\r\n\r\nexport const authEndpoint = \"https://accounts.spotify.com/authorize\";\r\nconst redirectUri = \"http://localhost:3000/\";\r\nconst clientId = \"8fff83ff78804c4ab477ceb760c12f89\";\r\n\r\nconst scopes = [\r\n  \"user-read-currently-playing\",\r\n  \"user-read-recently-played\",\r\n  \"user-read-playback-state\",\r\n  \"user-top-read\",\r\n  \"user-modify-playback-state\",\r\n];\r\n\r\n// scopes include functionalities/permissions for user\r\n\r\nexport const getTokenFromUrl = () => {\r\n  return window.location.hash\r\n    .substring(1)\r\n    .split(\"&\")\r\n    .reduce((initial, item) => {\r\n      let parts = item.split(\"=\");\r\n      initial[parts[0]] = decodeURIComponent(parts[1]);\r\n      return initial;\r\n    }, {});\r\n};\r\n\r\nconsole.log(getTokenFromUrl());\r\n\r\nexport const loginUrl = `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\r\n  \"%20\"\r\n)}&response_type=token&show_dialog=true`;\r\n\r\n// this token will be generated after authentication\r\n// show dialog will generate popup prompt\r\n","import React from \"react\";\r\nimport \"../css/Login.css\";\r\nimport { loginUrl } from \"../../spotify\";\r\n\r\nfunction Login() {\r\n  return (\r\n    <div className=\"login\">\r\n      <img src=\"/musique-logo.png\" alt=\"\" />\r\n      <a href={loginUrl}>LOGIN VIA SPOTIFY</a>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React, { createContext, useContext, useReducer } from \"react\";\r\n\r\n//prepare data layer\r\nexport const DataLayerContext = createContext();\r\n\r\n//actual layer wraps app component\r\n// 2 props and children is component wrap inside it\r\nexport const DataLayer = ({ initialState, reducer, children }) => (\r\n  <DataLayerContext.Provider value={useReducer(reducer, initialState)}>\r\n    {children}\r\n  </DataLayerContext.Provider>\r\n);\r\n\r\nexport const useDataLayerValue = () => useContext(DataLayerContext);\r\n","import React from \"react\";\r\nimport \"../css/Header.css\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport { useDataLayerValue } from \"./DataLayer\";\r\n\r\nfunction Header() {\r\n  const [{ user }] = useDataLayerValue();\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"header__left\">\r\n        <SearchIcon />\r\n        <input\r\n          placeholder=\"Search for Artists, Songs, or Podcasts \"\r\n          type=\"text\"\r\n        />\r\n      </div>\r\n      <div className=\"header__right\">\r\n        <Avatar\r\n          src={user?.images[0]?.url}\r\n          alt={user?.display_name}\r\n          sx={{ width: 40, height: 40 }}\r\n        />\r\n        <h4>{user?.display_name}</h4>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"../css/SongRow.css\";\r\n\r\nfunction SongRow({ track }) {\r\n  return (\r\n    <div className=\"songRow\">\r\n      <img className=\"songRow__album\" src={track.album.images[0].url} alt=\"\" />\r\n      <div className=\"songRow__info\">\r\n        <h1>{track.name}</h1>\r\n        <p>\r\n          {track.artists.map((artist) => artist.name).join(\", \")} -{\" \"}\r\n          {track.album.name}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SongRow;\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport \"../css/Body.css\";\r\nimport { useDataLayerValue } from \"./DataLayer\";\r\nimport PlayCircleFilledIcon from \"@mui/icons-material/PlayCircleFilled\";\r\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\r\nimport MoreHorizIcon from \"@mui/icons-material/MoreHoriz\";\r\nimport SongRow from \"./SongRow\";\r\n\r\nfunction Body({ spotify }) {\r\n  const [{ discover_weekly }] = useDataLayerValue();\r\n\r\n  return (\r\n    <div className=\"body\">\r\n      <Header spotify={spotify} />\r\n\r\n      <div className=\"body__info\">\r\n        <img src={discover_weekly?.images[0].url} alt=\"\" />\r\n\r\n        <div className=\"body__infoText\">\r\n          <strong>PLAYLIST</strong>\r\n          <h2>Discover Weekly</h2>\r\n          <p>{discover_weekly?.description}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"body__songs\">\r\n        <div className=\"body__icons\">\r\n          <PlayCircleFilledIcon className=\"body__shuffle\" />\r\n          <FavoriteIcon fontSize=\"large\" />\r\n          <MoreHorizIcon />\r\n        </div>\r\n\r\n        {discover_weekly?.tracks.items.map((item) => (\r\n          <SongRow track={item.track} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Body;\r\n","import React, { useEffect } from \"react\";\r\nimport \"../css/Footer.css\";\r\nimport PlayCircleOutlineIcon from \"@mui/icons-material/PlayCircleOutline\";\r\nimport PauseCircleOutlineIcon from \"@mui/icons-material/PauseCircleOutline\";\r\nimport SkipNextIcon from \"@mui/icons-material/SkipNext\";\r\nimport SkipPreviousIcon from \"@mui/icons-material/SkipPrevious\";\r\nimport ShuffleIcon from \"@mui/icons-material/Shuffle\";\r\nimport RepeatIcon from \"@mui/icons-material/Repeat\";\r\nimport PlaylistPlayIcon from \"@mui/icons-material/PlaylistPlay\";\r\nimport VolumeDownIcon from \"@mui/icons-material/VolumeDown\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Slider from \"@mui/material/Slider\";\r\nimport { useDataLayerValue } from \"./DataLayer\";\r\n\r\nfunction Footer({ spotify }) {\r\n  const [{ item, playing }, dispatch] = useDataLayerValue();\r\n\r\n  useEffect(() => {\r\n    spotify.getMyCurrentPlaybackState().then((r) => {\r\n      console.log(r);\r\n\r\n      dispatch({\r\n        type: \"SET_PLAYING\",\r\n        playing: r.is_playing,\r\n      });\r\n\r\n      dispatch({\r\n        type: \"SET_ITEM\",\r\n        item: r.item,\r\n      });\r\n    });\r\n  }, [spotify]);\r\n\r\n  const handlePlayPause = () => {\r\n    if (playing) {\r\n      spotify.pause();\r\n      dispatch({\r\n        type: \"SET_PLAYING\",\r\n        playing: false,\r\n      });\r\n    } else {\r\n      spotify.play();\r\n      dispatch({\r\n        type: \"SET_PLAYING\",\r\n        playing: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  const skipNext = () => {\r\n    spotify.skipToNext();\r\n    spotify.getMyCurrentPlayingTrack().then((r) => {\r\n      dispatch({\r\n        type: \"SET_ITEM\",\r\n        item: r.item,\r\n      });\r\n      dispatch({\r\n        type: \"SET_PLAYING\",\r\n        playing: true,\r\n      });\r\n    });\r\n  };\r\n\r\n  const skipPrevious = () => {\r\n    spotify.skipToPrevious();\r\n    spotify.getMyCurrentPlayingTrack().then((r) => {\r\n      dispatch({\r\n        type: \"SET_ITEM\",\r\n        item: r.item,\r\n      });\r\n      dispatch({\r\n        type: \"SET_PLAYING\",\r\n        playing: true,\r\n      });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"footer\">\r\n      <div className=\"footer__left\">\r\n        <img\r\n          className=\"footer__albumLogo\"\r\n          src={item?.album.images[0].url}\r\n          alt={item?.name}\r\n        />\r\n        {item ? (\r\n          <div className=\"footer__songInfo\">\r\n            <h4>{item.name}</h4>\r\n            <p>{item.artists.map((artist) => artist.name).join(\", \")}</p>\r\n          </div>\r\n        ) : (\r\n          <div className=\"footer__songInfo\">\r\n            <h4>No song is playing</h4>\r\n            <p>...</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\"footer__center\">\r\n        <ShuffleIcon className=\"footer__green\" />\r\n        <SkipPreviousIcon onClick={skipNext} className=\"footer__icon\" />\r\n\r\n        {playing ? (\r\n          <PauseCircleOutlineIcon\r\n            onClick={handlePlayPause}\r\n            fontSize=\"large\"\r\n            className=\"footer__icon\"\r\n          />\r\n        ) : (\r\n          <PlayCircleOutlineIcon\r\n            onClick={handlePlayPause}\r\n            fontSize=\"large\"\r\n            className=\"footer__icon\"\r\n          />\r\n        )}\r\n        <SkipNextIcon onClick={skipPrevious} className=\"footer__icon\" />\r\n        <RepeatIcon className=\"footer__green\" />\r\n      </div>\r\n      <div className=\"footer__right\">\r\n        <Grid container spacing={2}>\r\n          <Grid item>\r\n            <PlaylistPlayIcon />\r\n          </Grid>\r\n          <Grid item>\r\n            <VolumeDownIcon />\r\n          </Grid>\r\n          <Grid item xs>\r\n            <Slider\r\n              size=\"small\"\r\n              defaultValue={40}\r\n              aria-labelledby=\"continuous-slider\"\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport \"../css/SidebarOption.css\";\r\n\r\nfunction SidebarOption({ title, Icon }) {\r\n  return (\r\n    <div className=\"sidebarOption\">\r\n      {Icon && <Icon className=\"sidebarOption__icon\" />}\r\n      {Icon ? <h4>{title}</h4> : <p>{title}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SidebarOption;\r\n","import React from \"react\";\r\nimport \"../css/Sidebar.css\";\r\nimport SidebarOption from \"./SidebarOption\";\r\nimport HomeIcon from \"@mui/icons-material/Home\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport LibraryMusicIcon from \"@mui/icons-material/LibraryMusic\";\r\nimport { useDataLayerValue } from \"./DataLayer\";\r\n\r\nfunction Sidebar() {\r\n  const [{ playlists }] = useDataLayerValue();\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <img className=\"sidebar__logo\" src=\"/musique-logo.png\" alt=\"\" />\r\n      <SidebarOption title=\"Home\" Icon={HomeIcon} />\r\n      <SidebarOption title=\"Search\" Icon={SearchIcon} />\r\n      <SidebarOption title=\"Your Library\" Icon={LibraryMusicIcon} />\r\n\r\n      <br />\r\n      <strong className=\"sidebar__title\">PLAYLISTS</strong>\r\n      <hr />\r\n\r\n      {playlists?.items?.map((playlist) => (\r\n        <SidebarOption title={playlist.name} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","import React from \"react\";\r\nimport \"../css/Player.css\";\r\nimport Body from \"./Body\";\r\nimport Footer from \"./Footer\";\r\nimport Sidebar from \"./Sidebar\";\r\n\r\nfunction Player({ spotify }) {\r\n  return (\r\n    <div className=\"player\">\r\n      <div className=\"player__body\">\r\n        <Sidebar />\r\n        <Body spotify={spotify} />\r\n      </div>\r\n\r\n      <Footer spotify={spotify} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Player;\r\n","import React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport Login from \"./components/js/Login\";\nimport { getTokenFromUrl } from \"./spotify\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport Player from \"./components/js/Player\";\nimport { useDataLayerValue } from \"./components/js/DataLayer\";\n\n//super object--interacting with our app & spotify\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n  const [{ user, token }, dispatch] = useDataLayerValue();\n\n  // run code based on given condition\n\n  useEffect(() => {\n    // set token\n    const hash = getTokenFromUrl();\n    window.location.hash = \"\";\n    const _token = hash.access_token;\n\n    if (_token) {\n      spotify.setAccessToken(_token);\n\n      dispatch({\n        type: \"SET_TOKEN\",\n        token: _token,\n      });\n\n      // get user details\n      spotify.getMe().then((user) => {\n        dispatch({\n          type: \"SET_USER\",\n          user: user,\n        });\n      });\n\n      //get user playlists\n      spotify.getUserPlaylists().then((playlists) => {\n        dispatch({\n          type: \"SET_PLAYLISTS\",\n          playlists: playlists,\n        });\n      });\n\n      //get discover weekly playlist\n      spotify.getPlaylist(\"6ehdSiG3d2TinBXr1r7ZK0\").then((response) => {\n        dispatch({\n          type: \"SET_DISCOVER_WEEKLY\",\n          discover_weekly: response,\n        });\n      });\n\n      spotify.getMyTopArtists().then((response) =>\n        dispatch({\n          type: \"SET_TOP_ARTISTS\",\n          top_artists: response,\n        })\n      );\n\n      dispatch({\n        type: \"SET_SPOTIFY\",\n        spotify: spotify,\n      });\n    }\n  }, [user, token, dispatch]);\n\n  // console.log(\"user\", user);\n  // console.log(\"token\", token);\n\n  return (\n    // conditional rendering\n    <div className=\"app\">\n      {token ? <Player spotify={spotify} /> : <Login />}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","export const initialState = {\r\n  user: null,\r\n  playlists: [],\r\n  spotify: null,\r\n  discover_weekly: null,\r\n  top_artists: null,\r\n  playing: false,\r\n  item: null,\r\n  // Remove after finished developing\r\n  // token:\r\n  //   \" BQCcNTyP1NsQS9huTgsCsk3pLODaxH8BfU_CLa2L_p7LKG-QlEiE7ECZpJxzX5dJ8Ndf6p8feQLjahxR2CtGqrfxWK096Fa-BbHqOqjw1wqpAObtL8h5K7njDTD8drgvFfMI7S70edXiIGCLJDdWcNPVkpEPP7r5feXLxhZr-nXgNlSz\",\r\n};\r\n\r\n//action: how we manipulate data layer --> type -->[payload]\r\n// state: data in data layer\r\n\r\nconst reducer = (state, action) => {\r\n  console.log(action);\r\n\r\n  switch (action.type) {\r\n    case \"SET_USER\":\r\n      return {\r\n        //this is what new state will look like\r\n        ...state,\r\n        user: action.user,\r\n      };\r\n    case \"SET_TOKEN\":\r\n      return {\r\n        ...state,\r\n        token: action.token,\r\n      };\r\n    case \"SET_PLAYLISTS\":\r\n      return {\r\n        ...state,\r\n        playlists: action.playlists,\r\n      };\r\n    case \"SET_DISCOVER_WEEKLY\":\r\n      return {\r\n        ...state,\r\n        discover_weekly: action.discover_weekly,\r\n      };\r\n    case \"SET_PLAYING\":\r\n      return {\r\n        ...state,\r\n        playing: action.playing,\r\n      };\r\n\r\n    case \"SET_ITEM\":\r\n      return {\r\n        ...state,\r\n        item: action.item,\r\n      };\r\n\r\n    case \"SET_TOP_ARTISTS\":\r\n      return {\r\n        ...state,\r\n        top_artists: action.top_artists,\r\n      };\r\n\r\n    case \"SET_SPOTIFY\":\r\n      return {\r\n        ...state,\r\n        spotify: action.spotify,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { DataLayer } from \"./components/js/DataLayer\";\nimport reducer, { initialState } from \"./reducer\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <DataLayer initialState={initialState} reducer={reducer}>\n      <App />\n    </DataLayer>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}